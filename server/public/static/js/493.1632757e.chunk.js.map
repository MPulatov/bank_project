{"version":3,"file":"static/js/493.1632757e.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.jsx","pages/ckms_section/ckms_pos_requests/PosRequests.jsx"],"sourcesContent":["import React from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nconst Pagination = ({ pageCount, handlePageClick }) => {\n  return (\n    <>\n      <ReactPaginate\n        previousLabel={\"Previous\"}\n        pageCount={pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={3}\n        nextLabel={\"Next\"}\n        onPageChange={handlePageClick}\n        containerClassName={\"pagination pagination-sm justify-content-end\"}\n        pageClassName={\"page-item\"}\n        pageLinkClassName={\"page-link\"}\n        breakLabel={\"...\"}\n        previousLinkClassName={\"page-link\"}\n        nextLinkClassName={\"page-link\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"active\"}\n        previousClassName={\"page-item\"}\n        nextClassName={\"page-item\"}\n        breakClassName={\"page-item\"}\n        breakLinkClassName={\"page-link\"}\n      />\n    </>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport Pagination from \"../../../components/Pagination/Pagination\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Link } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport {\n  Container,\n  Paginate,\n  Icons,\n} from \"../../../components/Style/styledComponent/StyledComponents\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { useSelector } from \"react-redux\";\nimport { $host } from \"../../../http\";\nimport { MainScreen } from \"../../../components/MainScreen/MainScreen\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { ErrorMessages } from \"../../../components/ErrorMessage\";\n\nconst PosRequests = ({ setSearch, searching }) => {\n  const [posRequests, setPosRequests] = useState([]);\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  // const navigate = useNavigate();\n  const [error, setError] = useState(\"\");\n\n  async function getPosRequests() {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const response = await $host.get(\"/posrequests\", config);\n      setPosRequests(response.data);\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      setError(message);\n    }\n  }\n  // useEffect(() => {\n  //   getPosRequests();\n  //   if (!userInfo) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [navigate, userInfo]);\n  useEffect(() => {\n    getPosRequests();\n  }, []);\n\n  // Delete Button -----------------------------------------------------------------\n  async function handleDeleteContent(id) {\n    if (\n      window.confirm(\n        \"Вы действительно хотите удалить это обьект без возможности восстановления?\"\n      )\n    ) {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      await $host\n        .delete(`/posrequests/remove/${id}`, config)\n        .then(() => {\n          toast.success(\"Cодержимое успешно удалена!\");\n          setTimeout(() => {\n            getPosRequests();\n          }, 1000);\n        })\n        .catch((err) => setError(err.response.data.message));\n    }\n  }\n  // Pagination ---------------------------------------------------------------------\n  const [pageNumber, setPageNumber] = useState(0);\n  const PrePage = 20;\n  const pagesVisited = pageNumber * PrePage;\n  const pageCount = Math.ceil(posRequests.length / PrePage);\n  const handlePageClick = ({ selected }) => {\n    setPageNumber(selected);\n  };\n\n  return (\n    <MainScreen title=\"CKMS: Идентификаторы Терминала\">\n      <Container>\n        {userInfo?.IsAdmin && (\n          <Link to={\"/posrequests/add\"} className=\"d-flex justify-content-end\">\n            <Button className=\"box mb-3\" size=\"md\">\n              Создать Новый Идентификаторы Терминала\n            </Button>\n          </Link>\n        )}\n        {error && <ErrorMessages variant=\"danger\">{error}</ErrorMessages>}\n        <Table className=\"box\" striped bordered hover size=\"sm\">\n          <thead className=\"table-dark\">\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">TERM SN</th>\n              <th scope=\"col\">TERM INN</th>\n              <th scope=\"col\">TERM EIN</th>\n              <th scope=\"col\">TERM RNM</th>\n              <th scope=\"col\">TERM IMEI</th>\n              <th scope=\"col\">OTP CODE</th>\n              <th scope=\"col\">ACTIVE</th>\n              <th scope=\"col\">TRANSMITTED</th>\n              <th scope=\"col\">CREATED_AT</th>\n              {userInfo?.IsAdmin && <th scope=\"col\">ACTION</th>}\n            </tr>\n          </thead>\n          <tbody>\n            {posRequests\n              .filter((item) => {\n                if (setSearch === \"\") {\n                  return item;\n                } else if (\n                  item.term_inn\n                    .toString()\n                    .toLowerCase()\n                    .includes(searching.toString().toLowerCase())\n                ) {\n                  return item;\n                }\n              })\n              .slice(pagesVisited, pagesVisited + PrePage)\n              .map((item) => (\n                <tr key={item.id}>\n                  <th scope=\"row\">{item.id}</th>\n                  <td>{item.term_sn}</td>\n                  <td>{item.term_inn}</td>\n                  <td>{item.term_ein}</td>\n                  <td>{item.term_rnm}</td>\n                  <td>{item.term_imei}</td>\n                  <td>{item.otp_code}</td>\n                  <td>{item.active}</td>\n                  <td>{item.transmitted}</td>\n                  <td>{moment(item.created_at).format(\"llll\")}</td>\n                  {userInfo?.IsAdmin && (\n                    <td className=\"col-sm-1\">\n                      <Icons>\n                        <AiOutlineDelete\n                          className=\"Delete box\"\n                          onClick={() => handleDeleteContent(item.id)}\n                        />\n                      </Icons>\n                    </td>\n                  )}\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n        <Paginate>\n          <Pagination pageCount={pageCount} handlePageClick={handlePageClick} />\n        </Paginate>\n        <ToastContainer />\n      </Container>\n    </MainScreen>\n  );\n};\n\nexport default PosRequests;\n"],"names":["pageCount","handlePageClick","previousLabel","marginPagesDisplayed","pageRangeDisplayed","nextLabel","onPageChange","containerClassName","pageClassName","pageLinkClassName","breakLabel","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","previousClassName","nextClassName","breakClassName","breakLinkClassName","setSearch","searching","useState","posRequests","setPosRequests","userInfo","useSelector","state","userLogin","error","setError","getPosRequests","config","headers","Authorization","token","$host","response","data","message","id","window","confirm","then","toast","setTimeout","catch","err","useEffect","pageNumber","setPageNumber","pagesVisited","Math","ceil","length","title","IsAdmin","to","className","size","variant","striped","bordered","hover","scope","filter","item","term_inn","toString","toLowerCase","includes","slice","map","term_sn","term_ein","term_rnm","term_imei","otp_code","active","transmitted","moment","created_at","format","onClick","handleDeleteContent","selected"],"sourceRoot":""}